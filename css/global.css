/*
    Global CSS for COM1008 website
    Chris Heppell & Robbie Thandi
    Copyright 2017
*/


/* Global Styles */

html {
/*  Setting an HTML colour means that users don't notice the footer end and
    the rest of the viewport being filled with whitespace */
  background: #424242;
}

body {
  /*  Native font stack is slowly becoming widely used and uses system fonts for the website
      This stack is Open Source (I think and will reference where it's from)
      Runs through fonts in an order such that you shouldn't have a font which comes
      before the one for your OS */
  font-family: "Open Sans", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Ubuntu, "Helvetica Neue", Arial, sans-serif;
  font-size: 1rem;
  line-height: 1.414;
  background: #ffffff;
}
h1 {
  font-size: 2.5rem;
  font-weight: 600;
  margin: 0 0 1rem 0;
}
h2 {
  font-size: 2rem;
  font-weight: 600;
  margin: 0 0 1rem 0;
}
h3 {
  font-size: 1.75rem;
  font-weight: 600;
  margin: 0 0 1rem 0;
}
h4 {
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0 0 1rem 0;
}
h5 {
  font-size: 1.25rem;
  font-weight: 600;
  margin: 0 0 1rem 0;
}
h6 {
  font-size: 1rem;
  font-weight: 600;
  margin: 0 0 1rem 0;
}
p  {
/*  font-size: 1rem; Defined on body element and inherited */
  margin: 0 0 1rem 0;
}
code {
  font-family: "Roboto Mono", Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-weight: 400;
  background: #eeeeee;
  padding: 0.1rem 0.2rem;
}
/*Facilities page*/

.flexRow {
  display: flex;
  flex-direction: column;
  margin: 0 -1rem;
}

.flexRow > * {
  margin: auto 1rem;
}

.flexThird {
  flex: 0 0 33.33333%;
}

img {
  /* A global 100% max width prevents instances of images which are too large going beyond the edge of the page */
  max-width: 100%;
}

/* Must set figure margin as a class due to specificity and the .flexRow > * {} class declared earlier */
.figure {
  margin: 1rem 1rem 1rem 1rem;
}

figure img {
  display: block;
}

figcaption {
    display: block;
    background-color: #ccc;
    padding: 0.5rem;
}

a {
  color: #1976D2;
  text-decoration: none;
}

a:hover, a:focus, a:active {
  color: #1565C0;
  text-decoration: underline;
}

table {
  width: 100%;
  border-collapse: collapse;
  margin: 0 0 1rem 0;
}

table td, table th {
  padding: 0.5rem;
}

table th {
  background: #cccccc;
}

@media screen and (max-width: 1280px) {
/*  Sets table width to 100% of the viewport and akes the overflow scrollable
    Means only the table srolls and not the full page */
  table {
    overflow-x: auto;
    width: 100%;
    display: block;
    border: 1px solid #cccccc;
  }
}

blockquote {
  font-size: 1.2rem;
  border-left: 5px solid #1976D2;
  padding: 0.5rem 0 0.5rem 1rem;
  margin: 0 0 1rem 0;
}

blockquote p {
  margin: 0;
}

blockquote cite {
  font-size: 1rem;
  color: #333333;
}

/*  Breakpoints
    Use a class - .container - so that we can choose whether or not to apply a max-width */

/*  Mobile
    Set mobile as default - If your browser doesn't support @media we have a fallback*/
.container {
  margin: 0 20px;
}

@media screen and (min-width:768px) {
  .container {
    width: 720px;
    margin: auto;
  }
  nav .container {
    width: 720px;
  }
}

@media screen and (min-width:1020px) {
  .container {
    width: 980px;
    margin: auto;
  }
  nav .container {
    width: 980px;
  }
}

@media screen and (min-width:1280px) {
  .container {
    width: 1200px;
  }
  nav .container {
    width: 1200px;
    margin: auto;
  }
}


/* Menu Styles */
nav {
  background: #1976D2;
  margin: 0 0 1rem 0;
  color: #ffffff;
  font-size: 1.1rem;
}

nav a {
  color: #FFF;
  text-decoration: none;
  padding: 1rem 20px;
  margin: 0;
  display: block;
  max-width: 100%;
  transition: all 0.2s ease-in-out;
}

.mobileOnly {
    display: flex;
}

.mobileOptions {
  display: inline-block;
  flex-basis: 0;
  flex-grow: 1;
  max-width: 100%;
}

nav .container {
  margin: auto;
}

@media screen and (min-width: 768px) {
  nav a {
    display: inline-block;
    width: auto;
  }

  .mobileOnly {
    display: none;
  }
}

nav a:hover, nav a:focus, nav a:active {
  color: #ffffff;
  background: #1565C0;
  text-decoration: none;
  transition: all 0.2s ease-in-out;
}

nav ul {
  padding: 0;
  list-style: none;
  background: #1976D2;
  color: #ffffff;
  margin: 0;
  flex-basis: 100%;
  flex-grow: 1;
  align-items: center;
}

@media screen and (min-width: 768px) {
  nav ul {
    display: flex;
    flex-direction: row;
    margin: 0 -20px;
/*  Use of a negative margin is, technically, wrong but is deliberately supported
    by browsers and used so regularly that it is a standard in all but name */
  }
}

th {
  text-decoration: underline;
}

/* Form Styling */

.input {
  display: block;
  margin: 0 0 1rem 0;
}

form div label {
  margin: 0 0 1rem 0;
}

input, optgroup, select, textarea {
  min-width: 100%;
  max-width: 100%;
/* Setting both stops user resizing the <textarea> in the horizontal plane */
  width: 100%;
  background: #FFFFFF;
  border: 1px solid #aaaaaa;
/* Border-radius overrides Webkit curved edges */
  border-radius: 0;
  background-color: #ffffff;
  margin: 0.5rem 0 0 0;
  padding: 0.5rem 0.5rem;
  box-sizing: border-box;
/* Overrides Webkit's ghastly inner shadows */
  -webkit-appearance: none;
  font-family: inherit;
}

/*  Sets a min height for text area so user doesn't resize it and hide the placeholder
    Purely aesthetic, but slightly useful in terms of usability */
textarea {
  min-height: 4rem;
}

input:focus, optgroup:focus, select:focus, textarea:focus {
  border-color: #1976D2;
}

/* Currently changes button size globaally, no colour styling so other buttons can change colour */
button {
  padding: 0.5rem;
  font-size: 1rem;
}

/* Styles the button in the form with colour */
form button {
  color: #ffffff;
  background-color: #1976D2;
  border: 1px solid #1565C0;
}

form button:hover, form button:active, form button:focus {
  background-color: #1565C0;
}

#menuBar {
  display: none;
}

#showHideNavButton {
  float: right;
  width: auto;
}

/*Can adjust values of breakpoints. Just used this for now as this is what is used on lecture slides*/
@media screen and (min-width: 768px) {
  /*Hide button on large display*/
  #showHideNavButton {
    display: none;
  }
  #menuBar {
    /*
    Setting display: block !important; means that if the menu is closed when the viewport is small,
    this will not hide the menu if the viewport is made larger (nessecary as there is no show/hide button
    when the viewport is > 768px)

    !important is not pretty - like really not pretty so should only be used when it's the only possible way of doing
    something. I'm not sure if this can be done another way.
    */
    display: block !important;
  }
}

/* Footer Styling */
footer {
  background: #424242;
  color: #ffffff;
  padding: 1rem 0;
  margin: 1rem 0 0 0;
}

/* Front Page */

.frontpage1 {
    min-height: calc(100vh - 3.25rem);
    background: linear-gradient(to left, rgba(66, 66, 66, 0.7), rgba(66, 66, 66, 0.7)), url("../img/diamondLeavygreaveRoadWeb.jpg") no-repeat fixed center;
    background-repeat: repeat, no-repeat;
    background-attachment: scroll, fixed;
    background-position-x: 0%, center;
    background-position-y: 0%, center;
    background-size: auto auto, auto auto;
    background-position: center center;
    background-attachment: scroll;
    background-size: cover;
    background-repeat: repeat-y;
    overflow-y: hidden;
    margin: -1rem 0 1rem 0;
    color: #fff;
    padding: 1rem 0;
    text-shadow: 2px 2px 3px rgba(0,0,0,0.5);
    /* Adding text-shadow aids visibility of text against the picture background */
}

/*In mobile view it will allow the table to be scrolled*/
/* .timetable {
  overflow: auto;
  overflow-y: hidden;
}*/

@media screen and (min-width: 1020px) {
  .flexRow {
/*    Display image underneath text so that the whole screen is used for text on a smaller device*/
    flex-direction: row;
  }
}

.floatRight {
  float: right;
}

.floatLeft {
  float: left;
}

.screenReader {
  position: absolute;
  left: -100000px;
  overflow: hidden;

}
